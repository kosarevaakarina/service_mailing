version: '3.7'

services:
  db:
    restart: always
    image: postgres:14-alpine
    user: ${POSTGRES_USER}
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - "5432:5432"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0.2-alpine
    container_name: redis
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - "6379:6379"
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - '8000:8000'
    volumes:
      - .:/app
      - ./static:/app/static
    command: >
      bash -c "&& python manage.py migrate
      && gunicorn config.wsgi:application --bind 0.0.0.0:8000"

  celery:
    restart: always
    build: .
    container_name: celery
    command: >
      bash -c "celery -A config worker --beat --loglevel=info"
    volumes:
      - .:/app
    depends_on:
      - app
      - redis

  nginx:
    build: ./nginx
    container_name: nginx
    depends_on:
      - app
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./static:/static


volumes:
  pg_data:
  static:


